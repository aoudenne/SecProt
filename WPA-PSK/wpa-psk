(* WPA-PSK 4-way handshake protocol *)

(* Description of the protocol
Goal: Verify that A knows the pre-shared key, aka the pairwise master key (PMK)
Goal: Establish a pairwise transient key (PTK)
Ultimate Goal: Create a PTK between A & B without revealing PMK
A: Supplicant or Wireless Station (STA in paper)
B: Access Point (AP in paper)
MIC: Message Integrity Code
IE: RSN Information Element, carries listof auth and cipher selector fields for communications on RSN-capable stations

1) AP->STA NonceAP
2) STA->AP NonceSTA, MIC //STA can now compute PTK
3) AP->STA GTK, MIC   //Group transient key, AP can now compute PTK
4) STA->AP ACK, MIC  //just an aacknowledgement, on wikipedia the MIC isn't mentioned 

*)
pred c(any_type) [decompData, elimVar].

type principal.
type pairwiseMasterKey.

type pairwiseTransientKey.



fun makePtk(bitstring, bitstring, principal, principal, pairwiseMasterKey): pairwiseTransientKey.
fun mic(bitstring, bitstring):bitstring;


name PMK:pairwiseMasterKey;
name nAP:bitstring;
name nSTA:bitstring;
name STA:principal;
name AP:principal;

query c(secret[]).

clauses
(* The attacker can make ptks and put shit on the channel *)

(* AP *)
forall p:principal; c(nAP[p], AP);

(* STA *)
forall p:principal; c(nAP[STA],AP)-> c(